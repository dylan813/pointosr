<launch>
    <!-- ========== Launch classification_node.py ========== -->
    <!-- Config for PointNext model architecture -->
    <arg name="cfg_path" default="$(find pointosr)/pointnext/cfgs/pointnext-s.yaml" />
    <!-- Model checkpoint directory-->
    <arg name="model_path" default="/home/cerlab/Documents/data/pointosr/pointosr_log/norm/cfgs/norm_intensity2_bs16_vbs4/checkpoint/cfgs-train-pointnext-s-ngpus1-seed1467-20250615-161122-4ufduH7KHBFYjxF9EvNUto_ckpt_best.pth" />
    
    <!-- Parameters -->    
    <arg name="num_points" default="2048" />    <!-- Dependent on max point cloud size during training -->
    <arg name="max_cluster_topics" default="30" />

    <!-- Keep defaults -->
    <arg name="input_topic_prefix" default="/cluster_" />
    <arg name="trigger_topic" default="/motion_detector/cluster_batch" />
    <arg name="filtered_topic_prefix" default="/filt_cluster_" />
    <arg name="device" default="cuda" />

    <node name="pointosr_live_classification" pkg="pointosr_ros" type="classification_node.py" output="screen">
        <param name="cfg_path" value="$(arg cfg_path)" />
        <param name="model_path" value="$(arg model_path)" />
        <param name="num_points" value="$(arg num_points)" />
        <param name="max_cluster_topics" value="$(arg max_cluster_topics)" />
        <param name="input_topic_prefix" value="$(arg input_topic_prefix)" />
        <param name="trigger_topic" value="$(arg trigger_topic)" />
        <param name="filtered_topic_prefix" value="$(arg filtered_topic_prefix)" />
        <param name="device" value="$(arg device)" />
    </node>
</launch> 